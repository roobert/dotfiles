return {}
--return {
--  "nvim-lualine/lualine.nvim",
--  event = "VeryLazy",
--  opts = function()
--    local icons = require("lazyvim.config").icons
--
--    return {
--      options = {
--        theme = "auto",
--        globalstatus = true,
--        disabled_filetypes = { statusline = { "dashboard", "alpha" } },
--      },
--      component_separators = { left = "", right = "" },
--      section_separators = { left = "", right = "" },
--
--      winbar = {
--        lualine_c = {
--          -- FIXME:
--          -- keep the winbar open in some better way..
--          -- {
--          --   function()
--          --     return " "
--          --   end,
--          -- },
--          {
--            function()
--              return require("nvim-navic").get_location()
--            end,
--            cond = function()
--              return package.loaded["nvim-navic"] and require("nvim-navic").is_available()
--            end,
--          },
--        },
--      },
--
--      sections = {
--        lualine_a = {},
--        lualine_b = {},
--        lualine_c = {
--          {
--            "diagnostics",
--            symbols = {
--              error = icons.diagnostics.Error,
--              warn = icons.diagnostics.Warn,
--              info = icons.diagnostics.Info,
--              hint = icons.diagnostics.Hint,
--            },
--          },
--          { "filetype", icon_only = true, separator = "", padding = { left = 1, right = 0 } },
--          { "filename", path = 1, symbols = { modified = "  ", readonly = "", unnamed = "" } },
--          {
--            -- function()
--            --   return require("nvim-navic").get_location()
--            -- end,
--            -- cond = function()
--            --   return package.loaded["nvim-navic"] and require("nvim-navic").is_available()
--            -- end,
--          },
--        },
--        lualine_x = {
--          -- {
--          --   require("node-type").statusline,
--          -- },
--          --{
--          --  require("action-hints").statusline,
--          --},
--          {
--            function()
--              return require("noice").api.status.command.get()
--            end,
--            cond = function()
--              return package.loaded["noice"] and require("noice").api.status.command.has()
--            end,
--            color = Snacks.util.color("Statement"),
--          },
--          {
--            function()
--              return require("noice").api.status.mode.get()
--            end,
--            cond = function()
--              return package.loaded["noice"] and require("noice").api.status.mode.has()
--            end,
--            color = Snacks.util.color("Constant"),
--          },
--          {
--            function()
--              return "  " .. require("dap").status()
--            end,
--            cond = function()
--              return package.loaded["dap"] and require("dap").status() ~= ""
--            end,
--            color = Snacks.util.color("Debug"),
--          },
--          {
--            require("lazy.status").updates,
--            cond = require("lazy.status").has_updates,
--            color = Snacks.util.color("Special"),
--          },
--          {
--            "diff",
--            symbols = {
--              added = icons.git.added,
--              modified = icons.git.modified,
--              removed = icons.git.removed,
--            },
--          },
--        },
--        lualine_y = {
--          { "progress", separator = " ", padding = { left = 1, right = 0 } },
--          { "location", padding = { left = 0, right = 1 } },
--        },
--        lualine_z = {},
--      },
--      extensions = { "neo-tree", "lazy" },
--    }
--  end,
--}
